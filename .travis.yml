language: shell

dist: focal
group: stable

env:
  global:
    - VERSION=3.9.9
    - RELEASE=focal

jobs:
  include:
    - name: focal
      install:
        # Aktualizacja listy pakietów oraz instalacja bibliotek budujących
        - sudo apt-get update -o APT::Update::Post-Invoke-Success=""
        - sudo apt-get install -y build-essential libbz2-dev libreadline-dev libsqlite3-dev libffi-dev zlib1g-dev
        # Instalacja Pythona 3.9 oraz powiązanych pakietów
        - sudo apt-get install -y python3.9 python3.9-dev python3.9-venv python3-pip
        - sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 1
        - python3 --version  # Powinno wyświetlić Python 3.9.x
        # Aktualizacja pip oraz instalacja virtualenv (dla bieżącego użytkownika)
        - python3 -m pip install --upgrade pip setuptools
        - python3 -m pip install virtualenv
        # Dodatkowe kroki związane z pyenv (jeśli katalog /opt/pyenv/ istnieje)
        - pushd /opt/pyenv/
        - sudo git config --global --add safe.directory /opt/pyenv
        - sudo git checkout master
        - sudo git pull
        - popd
        # Ustawienie aliasu oraz instalacja virtualenv przy użyciu Pythona 3.9 – używamy python3 wywoływanego przez sudo
        - alias python=python3
        - python -m pip install --upgrade virtualenv
        - sudo python3 -m pip install --upgrade pip setuptools
        - sudo python3 -m pip install virtualenv

before_script:
  - export INSTALL_DEST=${INSTALL_DEST:-/opt/python}
  - export LSB_RELEASE=${LSB_RELEASE:-$(lsb_release -rs)}
  - export OS_NAME=${OS_NAME:-$(lsb_release -is | tr 'A-Z' 'a-z')}
  - export ARCH=${ARCH:-$(uname -m)}
  - export PACKAGES=${PACKAGES:-pip nose pytest mock wheel pipenv dataclasses}
  # Używamy podwójnych cudzysłowów, aby zmienna $CONFIGURE_OPTS (jeśli ustawiona) została rozwinięta
  - export PYTHON_CONFIGURE_OPTS="--with-wide-unicode --enable-shared --enable-ipv6 --enable-loadable-sqlite-extensions --with-computed-gotos ${CONFIGURE_OPTS}"
  - sudo chown -R $USER $HOME/.cache

script:
  # Ponowna aktualizacja listy pakietów (z wyłączonym hookiem) oraz instalacja dodatkowych bibliotek potrzebnych przy kompilacji
  - sudo apt-get update -o APT::Update::Post-Invoke-Success="" && sudo apt-get install -y build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev curl libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
  - ./bin/compile

after_success: ./bin/archive
after_failure: cat /tmp/python-build.*.log

addons:
  apt:
    packages:
      - openssl
      - libssl-dev
      - mercurial
      - python3-pip
  artifacts:
    paths:
      - $LSB_RELEASE/
    target_paths:
      - /binaries/$OS_NAME/$LSB_RELEASE/$ARCH
    branch:
      - default
    cache_control: public
