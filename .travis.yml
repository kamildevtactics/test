os: linux
dist: jammy
group: dev

jobs:
  include:
    - name: "Diagnoza i Weryfikacja Podman"
      script:
        # Diagnostyka systemu przed testami
        - echo "==== DIAGNOSTYKA SYSTEMU ===="
        - echo "Wersja systemu:"
        - cat /etc/os-release
        - echo "Dostępna pamięć:"
        - free -h
        - echo "Przestrzeń dyskowa:"
        - df -h
        
        # Sprawdzenie czy Podman jest dostępny w systemie
        - echo "==== SPRAWDZENIE INSTALACJI PODMAN ===="
        - echo "Szukanie binariów Podman w typowych lokalizacjach:"
        - find /usr -name podman -type f 2>/dev/null || echo "Nie znaleziono pliku podman w /usr"
        - find /bin -name podman -type f 2>/dev/null || echo "Nie znaleziono pliku podman w /bin"
        - find /snap -name podman -type f 2>/dev/null || echo "Nie znaleziono pliku podman w /snap"
        
        # Sprawdzenie logów instalacji
        - echo "==== LOGI INSTALACJI ===="
        - echo "Logi APT dotyczące instalacji Podman:"
        - grep -i podman /var/log/apt/history.log || echo "Brak wpisów o Podman w historii APT"
        - echo "Logi Snap (jeśli istnieją):"
        - grep -i podman /var/log/syslog || echo "Brak informacji o Podman w syslog"
        
        # Sprawdzenie konfiguracji Podman
        - echo "==== KONFIGURACJA PODMAN ===="
        - echo "Pliki konfiguracyjne Podman:"
        - ls -la /etc/containers/ || echo "Brak katalogu /etc/containers/"
        - cat /etc/containers/registries.conf || echo "Brak pliku registries.conf"
        
        # Próba naprawy - reinstalacja Podman
        - echo "==== PRÓBA NAPRAWY INSTALACJI ===="
        - echo "Weryfikacja dostępności Podman w repozytoriach:"
        - apt-cache policy podman || echo "Podman nie jest dostępny w repozytoriach APT"
        - echo "Próba reinstalacji Podman:"
        - sudo apt-get update
        - sudo apt-get install -y podman || echo "Nie udało się zainstalować Podman przez APT"
        
        # Alternatywna instalacja przez snap
        - echo "Próba instalacji przez Snap:"
        - sudo snap install podman --classic || echo "Nie udało się zainstalować Podman przez Snap"
        
        # Jeśli Snap zawiódł, spróbuj ręcznej instalacji
        - echo "Ręczna instalacja Podman z pliku deb:"
        - cd /tmp
        - wget -q http://archive.ubuntu.com/ubuntu/pool/universe/p/podman/podman_1.6.2-2_amd64.deb || echo "Nie udało się pobrać pliku deb Podman"
        - sudo dpkg -i podman_1.6.2-2_amd64.deb || sudo apt-get -f install -y
        
        # Dodanie użytkownika do odpowiedniej grupy
        - echo "Dodawanie użytkownika do grupy Podman:"
        - sudo usermod -aG podman $USER || echo "Nie znaleziono grupy podman"
        
        # Restart usługi (jeśli istnieje)
        - echo "Restart usługi Podman (jeśli istnieje):"
        - sudo systemctl restart podman.service || echo "Brak usługi podman.service"
        - sudo systemctl restart podman.socket || echo "Brak usługi podman.socket"
        
        # Sprawdzenie po naprawie
        - echo "==== WERYFIKACJA PO NAPRAWIE ===="
        - echo "Sprawdzenie PATH:"
        - echo $PATH
        - echo "Sprawdzenie, czy podman jest dostępny po naprawie:"
        - which podman || echo "Podman nadal niedostępny w PATH"
        - podman --version || echo "Komenda podman --version zwróciła błąd"
        
        # Sprawdzanie zależności
        - echo "==== SPRAWDZANIE ZALEŻNOŚCI ===="
        - echo "Sprawdzanie zależności dla Podman:"
        - ldd $(which podman 2>/dev/null) || echo "Nie można sprawdzić zależności bibliotek"
        
        # Sprawdzenie uprawnień
        - echo "Sprawdzanie uprawnień pliku podman:"
        - ls -la $(which podman 2>/dev/null) || echo "Nie można określić uprawnień"
        
        # TESTY WŁAŚCIWE - wykonywane tylko jeśli podman jest dostępny
        - echo "==== TESTY WŁAŚCIWE ===="
        - |
          if which podman >/dev/null 2>&1; then
            echo "Podman zainstalowany, rozpoczynam testy funkcjonalne"
            echo "Wersja Podman:"
            podman --version
            echo "Informacje o Podman:"
            podman info || echo "Komenda podman info nieudana"
            
            echo "Test podstawowy:"
            podman pull docker.io/library/hello-world || echo "Nie udało się pobrać obrazu hello-world"
            podman run hello-world || echo "Nie udało się uruchomić kontenera hello-world"
            
            echo "Test z Nginx:"
            podman run -d -p 8080:80 --name nginx-test docker.io/library/nginx:alpine || echo "Nie udało się uruchomić Nginx"
            podman ps | grep nginx-test || echo "Nginx nie jest widoczny na liście kontenerów"
            curl -s localhost:8080 | grep -i "Welcome to nginx" || echo "Nginx test failed"
            podman stop nginx-test || echo "Nie udało się zatrzymać kontenera Nginx"
            podman rm nginx-test || echo "Nie udało się usunąć kontenera Nginx"
            
            echo "Test sieci:"
            podman network create test-network || echo "Nie udało się utworzyć sieci"
            podman network ls | grep test-network || echo "Sieć testowa nie jest widoczna"
            podman network rm test-network || echo "Nie udało się usunąć sieci"
            
            echo "Test woluminów:"
            podman volume create test-volume || echo "Nie udało się utworzyć woluminu"
            podman volume ls | grep test-volume || echo "Wolumin testowy nie jest widoczny"
            podman volume rm test-volume || echo "Nie udało się usunąć woluminu"
          else
            echo "UWAGA: Podman nie jest dostępny, pomijam testy właściwe"
          fi
        
        # Podsumowanie
        - echo "==== PODSUMOWANIE ===="
        - |
          if which podman >/dev/null 2>&1; then
            echo "✅ Podman jest dostępny w systemie"
            podman --version
          else 
            echo "❌ Podman NIE jest dostępny w systemie mimo prób naprawy"
            echo "Sprawdź poprzednie logi, aby zidentyfikować problem"
          fi
