language: shell

jobs:
  include:
    - language: bash
      name: freebsd
      os: freebsd
      group: dev
      install:
        - set +x
        - pushd /opt/pyenv/ > /dev/null 2>&1
        - sudo git config --global --add safe.directory /opt/pyenv > /dev/null 2>&1
        - sudo git checkout master > /dev/null 2>&1
        - sudo git pull --quiet > /dev/null 2>&1
        - popd > /dev/null 2>&1
        - python --version > /dev/null 2>&1
        - sudo python -m ensurepip > /dev/null 2>&1
        - sudo python -m pip install --upgrade pip -q > /dev/null 2>&1
        - sudo python -m pip install virtualenv==20.0.2 -q > /dev/null 2>&1

allow_failures:
  - name: freebsd

env:
  global:
    - VERSION=3.9.9

install:
  - set +x
  - pushd /opt/pyenv/ > /dev/null 2>&1
  - sudo git config --global --add safe.directory /opt/pyenv > /dev/null 2>&1
  - sudo git checkout master > /dev/null 2>&1
  - sudo git pull > /dev/null 2>&1
  - popd > /dev/null 2>&1
  - alias python=python3
  - python -m pip install virtualenv -q > /dev/null 2>&1
  - sudo pip install --upgrade pip -q > /dev/null 2>&1
  - sudo pip install setuptools -q > /dev/null 2>&1
  - |
    {
      if python -m pip freeze --user | grep -qP '^virtualenv=='; then
        python -m pip install --upgrade --user virtualenv -q
      elif python -m pip freeze | grep -qP '^virtualenv=='; then
        sudo python -m pip install --upgrade virtualenv -q
      else
        sudo python -m pip install virtualenv -q
      fi
    } > /dev/null 2>&1

before_script:
  - set +x
  - export INSTALL_DEST=${INSTALL_DEST:-/opt/python}
  - export LSB_RELEASE=${LSB_RELEASE:-$(lsb_release -rs || if [[ $(uname -a) == *"FreeBSD"* ]]; then echo $(uname -r | rev | cut -c9- | rev); else false; fi || echo ${$(sw_vers -productVersion)%*.*})}
  - export OS_NAME=${OS_NAME:-$((lsb_release -is || if [[ $(uname -a) == *"FreeBSD"* ]]; then echo $(uname | cut -c1-); else false; fi || echo "osx") | tr "A-Z" "a-z")}
  - export ARCH=${ARCH:-$(uname -m)}
  - export PACKAGES=${PACKAGES:-pip nose pytest mock wheel pipenv dataclasses}
  - export PYTHON_CONFIGURE_OPTS="--with-wide-unicode --enable-shared --enable-ipv6 --enable-loadable-sqlite-extensions --with-computed-gotos $CONFIGURE_OPTS"
  - sudo chown -R $USER $HOME/.cache > /dev/null 2>&1
  - |
    {
      if [[ $VERSION = pypy*-dev ]]; then
        if ! [[ -f ~/virtualenv/pypy/bin/activate ]]; then
          curl -O https://s3.amazonaws.com/travis-python-archives/binaries/ubuntu/$(lsb_release -rs)/x86_64/pypy2.7-5.9.0.tar.bz2 > /dev/null 2>&1
          sudo tar xf pypy*.tar.bz2 -C / > /dev/null 2>&1
        fi
        source ~/virtualenv/pypy/bin/activate
        python --version > /dev/null 2>&1
      fi
    } > /dev/null 2>&1

script: 
  - set +x
  - sudo apt-get update > /dev/null 2>&1 && sudo apt-get install build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev curl libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev python3-dev -y > /dev/null 2>&1
  - ./bin/compile > /dev/null 2>&1

after_success: ./bin/archive > /dev/null 2>&1

after_failure: cat /tmp/python-build.*.log

addons:
  apt:
    packages:
      - openssl
      - libssl-dev
      - mercurial
      - python3-pip
  artifacts:
    paths:
      - $LSB_RELEASE/
    target_paths:
      - /binaries/$OS_NAME/$LSB_RELEASE/$ARCH
    branch:
      - default
    cache_control: public
